generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_PROD")
}

generator typegraphql {
  provider           = "typegraphql-prisma"
  output             = "./src/prisma/generated/type-graphql"
  emitTranspiledCode = "true"
}


model upload_file {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  alternativeText   String?   @db.VarChar(255)
  caption           String?   @db.VarChar(255)
  width             Int?
  height            Int?
  formats           Json?
  hash              String    @db.VarChar(255)
  ext               String?   @db.VarChar(255)
  mime              String    @db.VarChar(255)
  size              Decimal   @db.Decimal(10, 2)
  url               String    @db.VarChar(255)
  previewUrl        String?   @db.VarChar(255)
  provider          String    @db.VarChar(255)
  provider_metadata Json?
  created_by        Int?
  updated_by        Int?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  uploadFileMorph   upload_file_morph[]
}

model upload_file_morph {
  id             Int     @id @default(autoincrement())
  upload_file_id Int?
  related_id     Int?
  related_type   String?
  field          String?
  order          Int?
  uploadFile upload_file? @relation(fields: [upload_file_id], references: [id])
  venues venues? @relation(fields: [related_id], references: [id])
}

model venueType {
  id         Int       @id @default(autoincrement())
  created_by Int?
  updated_by Int?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?   @db.VarChar(255)
}

model venues {
  id            Int       @id @default(autoincrement())
  title         String?   @db.VarChar(255)
  description   String?
  address       String?   @db.VarChar(255)
  suburb        String?   @db.VarChar(255)
  city          String?   @db.VarChar(255)
  postCode      String?   @db.VarChar(255)
  lat           Float?
  lon           Float?
  website       String?   @db.VarChar(255)
  venue_type    Int?
  breakfast     Boolean?
  lunch         Boolean?
  dinner        Boolean?
  bachelorParty Boolean?
  henParty      Boolean?
  visible       Boolean?
  created_by    Int?
  updated_by    Int?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  uploadFileMorph   upload_file_morph[]
}

